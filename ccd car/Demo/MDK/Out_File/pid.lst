C251 COMPILER V5.60.0,  pid                                                                08/05/22  22:12:44  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE pid
OBJECT MODULE PLACED IN .\Out_File\pid.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\pid.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\..\Librari
                    -es\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src) DEB
                    -UG PRINT(.\Out_File\pid.lst) OBJECT(.\Out_File\pid.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          
    3          float Realize_SumError  = 0,
    4                    Realize_LastError = 0,        
    5                    Realize_PrevError = 0,        
    6                    Realize_LastData  = 0;
    7          
    8          // 位置式PID控制
    9          int32 PID_Realize(float KP,float KI,float KD,float KT, int32 NowData, int32 Point)
   10          {
   11   1      
   12   1              int32 Realize,Error;    // 最后得出的实际增量
   13   1      
   14   1              Error = NowData - Point;        // 计算当前误差
   15   1              Realize_SumError += KI * Error; // 误差积分
   16   1              
   17   1              if (Realize_SumError > KT)                      //积分限幅
   18   1              {
   19   2                      Realize_SumError = KT;
   20   2              }
   21   1              else if (Realize_SumError < -KT)
   22   1              {
   23   2                      Realize_SumError = -KT;
   24   2              }
   25   1              
   26   1              Realize = KP * Error
   27   1                              + Realize_SumError
   28   1                              + KD *(Error - Realize_LastError);
   29   1      //                      + PID[KB] * (NowData- LastData); //微分先行
   30   1              
   31   1              Realize_PrevError = Realize_LastError;  // 更新前次误差
   32   1              Realize_LastError = Error;                      // 更新上次误差
   33   1              Realize_LastData  = NowData;                    // 更新上次数据
   34   1      
   35   1              return Realize; // 返回实际值
   36   1      }
   37          
   38          
   39          float Increase_SumError  = 0,
   40                Increase_LastError = 0,   
   41                    Increase_PrevError = 0,       
   42                    Increase_LastData  = 0;
   43          
   44          // 增量式PID控制
   45          uint32 PID_Increase(float KP,float KI,float KD, int32 NowData, int32 Point)
   46          {
   47   1              
   48   1              static int32 iError,    //当前误差
   49   1                      Increase;       //最后得出的实际增量
   50   1      
   51   1              iError = Point - NowData;       // 计算当前误差
   52   1      
   53   1              Increase +=  KP * (iError - Increase_LastError)
   54   1                                + KI * iError
   55   1                                + KD * (iError - 2 * Increase_LastError + Increase_PrevError);
   56   1              
   57   1              Increase_PrevError = Increase_LastError;        // 更新前次误差
C251 COMPILER V5.60.0,  pid                                                                08/05/22  22:12:44  PAGE 2   

   58   1              Increase_LastError = iError;                    // 更新上次误差
   59   1          if(Increase>30000)
   60   1              Increase = 30000;
   61   1              
   62   1          if(Increase<-30000)
   63   1              Increase = -30000;
   64   1          
   65   1              return Increase;        // 返回增量
   66   1      }
   67          
   68          float Increase_LSumError  = 0,
   69                Increase_LLastError = 0,  
   70                    Increase_LPrevError = 0,      
   71                    Increase_LLastData  = 0;
   72          
   73          // 增量式PID控制
   74          int32 PID_LIncrease(float KP,float KI,float KD, int32 NowData, int32 Point)
   75          {
   76   1              
   77   1              static int32 iError,    //当前误差
   78   1                      Increase;       //最后得出的实际增量
   79   1      
   80   1              iError = Point - NowData;       // 计算当前误差
   81   1      
   82   1              Increase +=  KP * (iError - Increase_LLastError)
   83   1                                + KI * iError
   84   1                                + KD * (iError - 2 * Increase_LLastError + Increase_LPrevError);
   85   1              
   86   1          if(Increase>20000)
   87   1          {
   88   2              Increase = 20000;
   89   2          }
   90   1              
   91   1          if(Increase<-20000)
   92   1          {
   93   2              Increase = -20000;
   94   2          }
   95   1          
   96   1              Increase_LPrevError = Increase_LLastError;      // 更新前次误差
   97   1              Increase_LLastError = iError;                   // 更新上次误差
   98   1              
   99   1              return Increase;        // 返回增量
  100   1      }
  101          
  102          
  103          float Increase_RSumError  = 0,
  104                Increase_RLastError = 0,  
  105                    Increase_RPrevError = 0,      
  106                    Increase_RLastData  = 0;
  107          
  108          // 增量式PID控制
  109          int32 PID_RIncrease(float KP,float KI,float KD, int32 NowData, int32 Point)
  110          {
  111   1              
  112   1              static int32 iError,    //当前误差
  113   1                      Increase;       //最后得出的实际增量
  114   1      
  115   1              iError = Point - NowData;       // 计算当前误差
  116   1      
  117   1              Increase +=  KP * (iError - Increase_RLastError)
  118   1                                + KI * iError
  119   1                                + KD * (iError - 2 * Increase_RLastError + Increase_RPrevError);
  120   1          if(Increase>20000)
  121   1          {
  122   2              Increase = 20000;
  123   2          }
C251 COMPILER V5.60.0,  pid                                                                08/05/22  22:12:44  PAGE 3   

  124   1              
  125   1          if(Increase<-20000)
  126   1          {
  127   2              Increase = -20000;
  128   2          }
  129   1          
  130   1          Increase_RPrevError = Increase_RLastError;  // 更新前次误差
  131   1              Increase_RLastError = iError;                   // 更新上次误差
  132   1              
  133   1              return Increase;        // 返回增量
  134   1      }
  135          //int32 fuzzy_pid()
  136          //{
  137          
  138          //}


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       633     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        88         52
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       128     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
