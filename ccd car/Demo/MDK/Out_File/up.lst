C251 COMPILER V5.60.0,  up                                                                 15/05/22  11:18:41  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE up
OBJECT MODULE PLACED IN .\Out_File\up.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\up.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\..\Librarie
                    -s\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src) DEBU
                    -G PRINT(.\Out_File\up.lst) OBJECT(.\Out_File\up.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          
    3          void uart2_putbuff (uint8 *buff, uint16 len)
    4          {
    5   1          while(len--)
    6   1          {
    7   2               uart_putchar(UART_2,*buff);
    8   2               buff++;
    9   2          }
   10   1      }
   11          
   12          void vcan_sendware(uint8 *wareaddr, uint16 waresize)
   13          { 
   14   1          uint8 cmdf[2] = {0x03, 0xfc};
   15   1          uint8 cmdr[2] = {0xfc, 0x03};
   16   1         
   17   1          uart_putbuff(UART_2,cmdf,sizeof(cmdf));
   18   1          uart_putbuff(UART_2,wareaddr,waresize);
   19   1          uart_putbuff(UART_2,cmdr,sizeof(cmdr));
   20   1      }
   21          uint16 warebuf[1];
   22          
   23          void VCAN()
   24          {
   25   1          warebuf[0]=555;
   26   1          
   27   1      //    warebuf[0]=encoder_right;
   28   1      //    warebuf[1]=encoder_left;
   29   1      //    warebuf[2]=Right_Duty;
   30   1      //    warebuf[3]=Left_Duty;
   31   1      //    warebuf[4]=Target_Speed;
   32   1          
   33   1          vcan_sendware((uint8 *)warebuf,sizeof(warebuf));
   34   1      }
   35          
   36          
   37          #define BYTE0(dwTemp)       (*(char *)(&dwTemp))     //取出低字节
   38          #define BYTE1(dwTemp)       (*((char *)(&dwTemp) + 1))     //    取存储在此变量下一内存字节的内容
   39          #define BYTE2(dwTemp)       (*((char *)(&dwTemp) + 2))
   40          #define BYTE3(dwTemp)       (*((char *)(&dwTemp) + 3))
   41          
   42          uint8 Data_to_Send[100];
   43          
   44          void NiMing(int16 A, int16 B, int16 C,int16 D,int16 E)
   45          {
   46   1          static uint8 _cnt = 0;
   47   1              static uint8 i;
   48   1              static uint8 sumcheck = 0;
   49   1              static uint8 addcheck = 0;
   50   1          
   51   1          _cnt = 0;
   52   1          sumcheck = 0;
   53   1          addcheck = 0;
   54   1              
   55   1              Data_to_Send[_cnt++] = 0xAA;
   56   1              Data_to_Send[_cnt++] = 0xFF;
   57   1              Data_to_Send[_cnt++] = 0xF1;
C251 COMPILER V5.60.0,  up                                                                 15/05/22  11:18:41  PAGE 2   

   58   1              Data_to_Send[_cnt++] = 10;
   59   1              Data_to_Send[_cnt++] = BYTE1(A);
   60   1              Data_to_Send[_cnt++] = BYTE0(A);
   61   1              Data_to_Send[_cnt++] = BYTE1(B);
   62   1              Data_to_Send[_cnt++] = BYTE0(B);
   63   1              Data_to_Send[_cnt++] = BYTE1(C);
   64   1              Data_to_Send[_cnt++] = BYTE0(C);
   65   1              Data_to_Send[_cnt++] = BYTE1(D);
   66   1              Data_to_Send[_cnt++] = BYTE0(D);
   67   1          Data_to_Send[_cnt++] = BYTE1(E);
   68   1              Data_to_Send[_cnt++] = BYTE0(E);
   69   1              
   70   1              for(i = 0; i < _cnt; i++)
   71   1              {
   72   2                      sumcheck += Data_to_Send[i];
   73   2                      addcheck += sumcheck;
   74   2              }
   75   1      
   76   1              Data_to_Send[_cnt++] = sumcheck;
   77   1              Data_to_Send[_cnt++] = addcheck;
   78   1          uart_putbuff(UART_1,Data_to_Send,_cnt);
   79   1      }
   80          
   81          void ccd_up()
   82          {
   83   1              if(UP==1){
   84   2              
   85   2          if(tsl1401_finish_flag){
   86   3              
   87   3                      //发送图像到上位机
   88   3                      //ccd_send_data(UART_1, ccd_data);
   89   3              ccd_send_data(UART_1, ccd_value);
   90   3              //ips_show_ccd1(ccd_value);
   91   3              
   92   3                      //采集完成标志位清除                    
   93   3                      tsl1401_finish_flag = 0;        
   94   3          }
   95   2              }
   96   1              
   97   1              if(UP==0){  
   98   2                      if(tsl1401_finish_flag2){
   99   3              
  100   3                      //发送图像到上位机
  101   3                      //ccd_send_data(UART_1, ccd_data);
  102   3              ccd_send_data(UART_1, ccd_value2);
  103   3              //ips_show_ccd2(ccd_value2);
  104   3              
  105   3                      //采集完成标志位清除                    
  106   3                      tsl1401_finish_flag2 = 0;       
  107   3          }
  108   2              }
  109   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       457     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       106         20
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
C251 COMPILER V5.60.0,  up                                                                 15/05/22  11:18:41  PAGE 3   

  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        19     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
