C251 COMPILER V5.60.0,  motor                                                              08/05/22  22:47:41  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE motor
OBJECT MODULE PLACED IN .\Out_File\motor.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\motor.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\..\Libra
                    -ries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src) D
                    -EBUG PRINT(.\Out_File\motor.lst) OBJECT(.\Out_File\motor.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          
    3          uint16 PWM_LeftOut,PWM_RightOut,Now_speed = 0,PWM_Out=0;
    4          float Target_Speed = 0;
    5          uint16 Left_Duty = 0,Right_Duty = 0;
    6          float Speed_KP = 20.0,//150//45//30
    7                    Speed_KI = 1.8,//6//1.8
    8                    Speed_KD = 0;
    9          
   10          
   11          /**
   12          *  @name   : motor_init
   13          *  @author : chelly
   14          *  @tips   : 电机初始化
   15          */
   16          void motor_init()
   17          {
   18   1        pwm_init(PWMA_CH1P_P60, 10000, 0);
   19   1        pwm_init(PWMA_CH2P_P62, 10000, 0);
   20   1        pwm_init(PWMA_CH3P_P64, 10000, 0);
   21   1        pwm_init(PWMA_CH4P_P66, 10000, 0);
   22   1      }
   23          
   24          /**
   25          *  @name   : PWM_Output
   26          *  @author : chelly
   27          *  @tips   : 电机输出
   28          */
   29          void PWM_Output(int R_Duty,int L_Duty)
   30          {
   31   1          if(R_Duty >= 0)
   32   1          {
   33   2              R_Duty = (R_Duty>4500? 4500:R_Duty);
   34   2              pwm_duty(PWMA_CH1P_P60, 0);
   35   2              pwm_duty(PWMA_CH2P_P62, R_Duty);
   36   2          }
   37   1          else
   38   1          {
   39   2              R_Duty = (R_Duty<-4500? -4500:R_Duty);
   40   2              pwm_duty(PWMA_CH1P_P60, -R_Duty);                                                       
   41   2              pwm_duty(PWMA_CH2P_P62, 0);                                             
   42   2          }
   43   1          if(L_Duty >= 0)
   44   1          {
   45   2              L_Duty = (L_Duty>4500? 4500:L_Duty);
   46   2              pwm_duty(PWMA_CH3P_P64, 0);                                             
   47   2              pwm_duty(PWMA_CH4P_P66, L_Duty);                                                        
   48   2          }
   49   1          else
   50   1          {
   51   2              Left_Duty = (L_Duty<-4500? -4500:L_Duty);
   52   2              pwm_duty(PWMA_CH3P_P64, -L_Duty);                                                       
   53   2              pwm_duty(PWMA_CH4P_P66, 0);                                     
   54   2          }
   55   1              
   56   1      }
   57          
C251 COMPILER V5.60.0,  motor                                                              08/05/22  22:47:41  PAGE 2   

   58          /**
   59          *  @name   : PWM_Control
   60          *  @tips   : 电机控制
   61          */
   62          void PWM_Control(void)
   63          {
   64   1            if(sc_flag != 1||sc_flag != 2||sc_flag != 3
   65   1            ||sc_flag != 5||sc_flag != 6||sc_flag != 7)
   66   1            {
   67   2              if(df<40&&df>-40)
   68   2              {
   69   3                  Target_Speed =210;//30
   70   3              }
   71   2      //        else if(df>-60&&df<-30)
   72   2      //        {
   73   2      //            Target_Speed =70;//30
   74   2      //        }
   75   2      //        else if(df<60&&df>30)
   76   2      //        {
   77   2      //            Target_Speed =70;//30
   78   2      //        }
   79   2              else 
   80   2              {
   81   3                  Target_Speed =190;//30
   82   3              }
   83   2           }
   84   1      //    if(cbh<10 && cbh>-10)
   85   1      //    {
   86   1      //        Target_Speed = 45;//55
   87   1      //    }
   88   1      //    else if((cbh>10 && cbh<30)||(cbh<-10 && cbh>-30))
   89   1      //    {
   90   1      //        Target_Speed = 30;//40
   91   1      //    }
   92   1      //    else
   93   1      //    {
   94   1      //        Target_Speed =200;//30
   95   1      //    }
   96   1      //  if(ad_value3<10&&ad_value2<10)
   97   1      //  {
   98   1      //     pwm_duty(PWMA_CH1P_P60, 0);
   99   1      //     pwm_duty(PWMA_CH2P_P62, 0);
  100   1      //     pwm_duty(PWMA_CH3P_P64, 0);                                              
  101   1      //     pwm_duty(PWMA_CH4P_P66, 0);
  102   1      //  }
  103   1      //  else
  104   1      //  { 
  105   1      //    PWM_Out = PID_Increase(Speed_KP,Speed_KI,Speed_KD, encoder_left, Target_Speed);
  106   1          Left_Duty = PID_LIncrease(Speed_KP,Speed_KI,Speed_KD, encoder_left, Target_Speed);
  107   1          Right_Duty = PID_RIncrease(Speed_KP,Speed_KI,Speed_KD, encoder_right, Target_Speed);
  108   1      //  }
  109   1      }
  110          
  111            


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       406     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        28     ------
  bit size             =    ------     ------
C251 COMPILER V5.60.0,  motor                                                              08/05/22  22:47:41  PAGE 3   

  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        56     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
