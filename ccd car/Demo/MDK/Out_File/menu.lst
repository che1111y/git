C251 COMPILER V5.60.0,  menu                                                               08/05/22  22:12:46  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE menu
OBJECT MODULE PLACED IN .\Out_File\menu.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\menu.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\..\Librar
                    -ies\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src) DE
                    -BUG PRINT(.\Out_File\menu.lst) OBJECT(.\Out_File\menu.obj) 

stmt  level    source

    1          #include "menu.h"
    2          #include "key.h"
    3          uint8   start_flag=0;     //出库完成标志位
    4          uint16  start_time=0;     //出库时间
    5          uint8 fun=0;
    6          uint8 func_index=0;
    7          //开关状态变量
    8          uint8 key1_status = 1;
    9          uint8 key2_status = 1;
   10          uint8 key3_status = 1;
   11          uint8 key4_status = 1;
   12          uint8 key5_status = 1;
   13          
   14          //上一次开关状态变量
   15          uint8 key1_last_status;
   16          uint8 key2_last_status;
   17          uint8 key3_last_status;
   18          uint8 key4_last_status;
   19          uint8 key5_last_status;
   20          
   21          //开关标志位
   22          uint8 key1_flag;
   23          uint8 key2_flag;
   24          uint8 key3_flag;
   25          uint8 key4_flag;
   26          uint8 key5_flag;
   27          
   28          
   29          void (*current_operation_index)(void);
   30          
   31          
   32          void fun1(void)
   33          {
   34   1          fun=1;
   35   1          ips114_showstr(2,0,"image <-");
   36   1          ips114_showstr(2,0,"image");
   37   1          
   38   1          ips114_showstr(2,40,"engine");
   39   1      
   40   1          ips114_showstr(2,80,"motor");
   41   1      
   42   1          ips114_showstr(2,120,"start");
   43   1      }
   44          void fun2(void)
   45          {
   46   1          fun=2;
   47   1          ips114_showstr(2,0,"image");
   48   1      
   49   1          ips114_showstr(2,40,"engine <-");
   50   1          ips114_showstr(2,40,"engine");
   51   1          
   52   1          ips114_showstr(2,80,"motor");
   53   1      
   54   1          ips114_showstr(2,120,"start");
   55   1      }
   56          void fun3(void)
   57          {
C251 COMPILER V5.60.0,  menu                                                               08/05/22  22:12:46  PAGE 2   

   58   1          fun=3;
   59   1          ips114_showstr(2,0,"image");
   60   1      
   61   1          ips114_showstr(2,40,"engine");
   62   1      
   63   1          ips114_showstr(2,80,"motor <-");
   64   1          ips114_showstr(2,80,"motor");
   65   1          
   66   1          ips114_showstr(2,120,"start");
   67   1      }
   68          void fun4(void)
   69          {
   70   1          fun=4;
   71   1          ips114_showstr(2,0,"image");
   72   1      
   73   1          ips114_showstr(2,40,"engine");
   74   1      
   75   1          ips114_showstr(2,80,"motor");
   76   1      
   77   1          ips114_showstr(2,120,"start <-");
   78   1          ips114_showstr(2,120,"start");
   79   1      }
   80          void fun5()
   81          {
   82   1          fun=5;
   83   1      //    ips114_showstr(0,60,"LCDW");   //测量赛道使用
   84   1      //    ips114_showuint8(40,60,j);
   85   1      //    ips114_showstr(0,80,"LCDH");
   86   1      //    ips114_showuint8(40,80,k);
   87   1      //    ips114_showstr(0,100,"steer");
   88   1      //    ips114_showint16(40,100,steer_duty);
   89   1      //    ips114_showstr(0,120,"out");
   90   1      //    ips114_showfloat(40,120,Dir_error,3,3);
   91   1      //    ips114_showstr(120,80,"<-");
   92   1      }
   93          void fun6()
   94          {
   95   1          fun=6;
   96   1      //    ips114_showstr(0,60,"LCDW");    //测量赛道使用
   97   1      //    ips114_showuint8(40,60,j);
   98   1      //    ips114_showstr(0,80,"LCDH");
   99   1      //    ips114_showuint8(40,80,k);
  100   1      //    ips114_showstr(0,100,"cir");
  101   1      //    ips114_showuint8(40,100,leftcircle_judge_flag);
  102   1      //    ips114_showuint8(80,100,rightcircle_judge_flag);
  103   1      //    ips114_showstr(0,120,"shizi");
  104   1      //    ips114_showuint8(40,120,re_flag_shizi);
  105   1      //    ips114_showstr(0,140,"sancha");
  106   1      //    ips114_showuint8(60,140,flag_sancha);
  107   1      //    ips114_showstr(120,100,"<-");
  108   1      }
  109          void fun7()
  110          {
  111   1          fun=7;
  112   1          /****舵机PD***/
  113   1      //    ips114_showstr(0,0,"Dir_P");
  114   1      //    ips114_showfloat(40,0,Dir_P,2,3);
  115   1      //    ips114_showstr(0,20,"Dir_D");
  116   1      //    ips114_showfloat(40,20,Dir_D,2,3);
  117   1      //    /******速度PID**********/
  118   1      //    ips114_showstr(0,40,"L_Speed_P");
  119   1      //    ips114_showfloat(60,40,L_Speed_Kp,2,3);
  120   1      //    ips114_showstr(0,60,"L_Speed_I");
  121   1      //    ips114_showfloat(60,60,L_Speed_Ki,2,3);
  122   1      //    ips114_showstr(0,80,"L_Speed_D");
  123   1      //    ips114_showfloat(60,80,L_Speed_Kd,2,3);
C251 COMPILER V5.60.0,  menu                                                               08/05/22  22:12:46  PAGE 3   

  124   1      //    ips114_showstr(120,0,"<-");
  125   1      }
  126          void fun8()
  127          {
  128   1          fun=8;
  129   1          /****舵机PD***/
  130   1      //    ips114_showstr(0,0,"Dir_P");
  131   1      //    ips114_showfloat(40,0,Dir_P,2,3);
  132   1      //    ips114_showstr(0,20,"Dir_D");
  133   1      //    ips114_showfloat(40,20,Dir_D,2,3);
  134   1      //    /******速度PID**********/
  135   1      //    ips114_showstr(0,40,"L_Speed_P");
  136   1      //    ips114_showfloat(60,40,L_Speed_Kp,2,3);
  137   1      //    ips114_showstr(0,60,"L_Speed_I");
  138   1      //    ips114_showfloat(60,60,L_Speed_Ki,2,3);
  139   1      //    ips114_showstr(0,80,"L_Speed_D");
  140   1      //    ips114_showfloat(60,80,L_Speed_Kd,2,3);
  141   1      //    ips114_showstr(120,20,"<-");
  142   1      }
  143          void fun9()
  144          {
  145   1          fun=9;
  146   1          /****舵机PD***/
  147   1      //    ips114_showstr(0,0,"Dir_P");
  148   1      //    ips114_showfloat(40,0,Dir_P,2,3);
  149   1      //    ips114_showstr(0,20,"Dir_D");
  150   1      //    ips114_showfloat(40,20,Dir_D,2,3);
  151   1      //    /******速度PID**********/
  152   1      //    ips114_showstr(0,40,"L_Speed_P");
  153   1      //    ips114_showfloat(60,40,L_Speed_Kp,2,3);
  154   1      //    ips114_showstr(0,60,"L_Speed_I");
  155   1      //    ips114_showfloat(60,60,L_Speed_Ki,2,3);
  156   1      //    ips114_showstr(0,80,"L_Speed_D");
  157   1      //    ips114_showfloat(60,80,L_Speed_Kd,2,3);
  158   1      //    ips114_showstr(120,40,"<-");
  159   1      }
  160          void fun10()
  161          {
  162   1          fun=10;
  163   1          /****舵机PD***/
  164   1      //    ips114_showstr(0,0,"Dir_P");
  165   1      //    ips114_showfloat(40,0,Dir_P,2,3);
  166   1      //    ips114_showstr(0,20,"Dir_D");
  167   1      //    ips114_showfloat(40,20,Dir_D,2,3);
  168   1      //    /******速度PID**********/
  169   1      //    ips114_showstr(0,40,"L_Speed_P");
  170   1      //    ips114_showfloat(60,40,L_Speed_Kp,2,3);
  171   1      //    ips114_showstr(0,60,"L_Speed_I");
  172   1      //    ips114_showfloat(60,60,L_Speed_Ki,2,3);
  173   1      //    ips114_showstr(0,80,"L_Speed_D");
  174   1      //    ips114_showfloat(60,80,L_Speed_Kd,2,3);
  175   1      //    ips114_showstr(120,60,"<-");
  176   1      }
  177          void fun11()
  178          {
  179   1          fun=11;
  180   1          /****舵机PD***/
  181   1      //    ips114_showstr(0,0,"Dir_P");
  182   1      //    ips114_showfloat(40,0,Dir_P,2,3);
  183   1      //    ips114_showstr(0,20,"Dir_D");
  184   1      //    ips114_showfloat(40,20,Dir_D,2,3);
  185   1      //    /******速度PID**********/
  186   1      //    ips114_showstr(0,40,"L_Speed_P");
  187   1      //    ips114_showfloat(60,40,L_Speed_Kp,2,3);
  188   1      //    ips114_showstr(0,60,"L_Speed_I");
  189   1      //    ips114_showfloat(60,60,L_Speed_Ki,2,3);
C251 COMPILER V5.60.0,  menu                                                               08/05/22  22:12:46  PAGE 4   

  190   1      //    ips114_showstr(0,80,"L_Speed_D");
  191   1      //    ips114_showfloat(60,80,L_Speed_Kd,2,3);
  192   1      //    ips114_showstr(120,80,"<-");
  193   1      }
  194          void fun12()
  195          {
  196   1          fun=12;
  197   1      //    ips114_showstr(0,0,"GoalSpeed_L");    //目标速度配置
  198   1      //    ips114_showuint16(80,0,GoalSpeed_L);      //实际速度显示
  199   1      //    ips114_showstr(0,20,"GoalSpeed_R");
  200   1      //    ips114_showuint8(80,20,GoalSpeed_R);
  201   1      //    ips114_showstr(0,40,"L_Encoder");//编码器左
  202   1      //    ips114_showuint16(80,40,RealSpeed_L);
  203   1      //    ips114_showstr(0,60,"R_Encoder");//编码器右
  204   1      //    ips114_showint16(80,60,RealSpeed_R);
  205   1      //    ips114_showstr(0,80,"L_output");//编码器左
  206   1      //    ips114_showuint16(80,80,L_PwmOut);
  207   1      //    ips114_showstr(0,100,"L_output");//编码器右
  208   1      //    ips114_showint16(80,100,R_PwmOut);
  209   1      //    ips114_showstr(120,0,"<-");
  210   1      
  211   1      }
  212          void fun13()
  213          {
  214   1          fun=13;
  215   1      //    ips114_showstr(0,0,"GoalSpeed_L");    //目标速度配置
  216   1      //    ips114_showuint16(80,0,GoalSpeed_L);
  217   1      //    ips114_showstr(0,20,"GoalSpeed_R");   //实际速度显示
  218   1      //    tft180_show_uint8(80,20,GoalSpeed_R);
  219   1      //    ips114_showstr(0,40,"L_Encoder");//编码器左
  220   1      //    ips114_showuint16(80,40,RealSpeed_L);
  221   1      //    ips114_showstr(0,60,"R_Encoder");//编码器右
  222   1      //    ips114_showint16(80,60,RealSpeed_R);
  223   1      //    ips114_showstr(0,80,"L_output");//编码器左
  224   1      //    ips114_showuint16(80,80,L_PwmOut);
  225   1      //    ips114_showstr(0,100,"L_output");//编码器右
  226   1      //    ips114_showint16(80,100,R_PwmOut);
  227   1      //    ips114_showstr(120,20,"<-");
  228   1      
  229   1      }
  230          void fun14()
  231          {
  232   1          fun=14;
  233   1      //    ips114_showstr(0,0,"GoalSpeed_L");    //目标速度配置
  234   1      //    ips114_showuint16(80,0,GoalSpeed_L);
  235   1      //    ips114_showstr(0,20,"GoalSpeed_R");   //实际速度显示
  236   1      //    ips114_showuint8(80,20,GoalSpeed_R);
  237   1      //    ips114_showstr(0,40,"L_Encoder");//编码器左
  238   1      //    ips114_showuint16(80,40,RealSpeed_L);
  239   1      //    ips114_showstr(0,60,"R_Encoder");//编码器右
  240   1      //    ips114_showint16(80,60,RealSpeed_R);
  241   1      //    ips114_showstr(0,80,"L_output");//编码器左
  242   1      //    ips114_showuint16(80,80,L_PwmOut);
  243   1      //    ips114_showstr(0,100,"L_output");//编码器右
  244   1      //    ips114_showint16(80,100,R_PwmOut);
  245   1      //    ips114_showstr(120,40,"<-");
  246   1      
  247   1      }
  248          void fun15()
  249          {
  250   1          fun=15;
  251   1      //    ips114_showstr(0,0,"GoalSpeed_L");    //目标速度配置
  252   1      //    ips114_showuint16(80,0,GoalSpeed_L);
  253   1      //    ips114_showstr(0,20,"GoalSpeed_R");   //实际速度显示
  254   1      //    ips114_showuint8(80,20,GoalSpeed_R);
  255   1      //    ips114_showstr(0,40,"L_Encoder");//编码器左
C251 COMPILER V5.60.0,  menu                                                               08/05/22  22:12:46  PAGE 5   

  256   1      //    ips114_showuint16(80,40,RealSpeed_L);
  257   1      //    ips114_showstr(0,60,"R_Encoder");//编码器右
  258   1      //    ips114_showint16(80,60,RealSpeed_R);
  259   1      //    ips114_showstr(0,80,"L_output");//编码器左
  260   1      //    ips114_showuint16(80,80,L_PwmOut);
  261   1      //    ips114_showstr(0,100,"L_output");//编码器右
  262   1      //    ips114_showint16(80,100,R_PwmOut);
  263   1      //    ips114_showstr(120,60,"<-");
  264   1      }
  265          void fun16()
  266          {
  267   1          fun=16;
  268   1          /***********三秒启动*************/
  269   1          ips114_showstr(15,20,"<<  Start  >>");
  270   1          ips114_showstr(15,20,"    Start    ");
  271   1          ips114_showstr(15,60,"     3 S     ");
  272   1          ips114_showstr(15,100,"<<  Start  >>");
  273   1          ips114_showstr(15,100,"    Start    ");
  274   1      }
  275          
  276          
  277          key_table code_table[30]=
  278          {
  279              //current,up,down,enter
  280              {0,3,1,4,(*fun1)},//第一层，  显示<<  IMAGE  >>、ENGINE、MOTOR、START
  281              {1,0,2,6,(*fun2)},//第一层，  显示  IMAGE、 <<  ENGINE  >>、MOTOR、START
  282              {2,1,3,11,(*fun3)},//第一层，显示  IMAGE 、ENGINE、<<  MOTOR  >>、START
  283              {3,2,0,15,(*fun4)},//第一层，显示  IMAGE 、ENGINE、MOTOR、  <<  START  >>
  284          
  285              
  286              {4,5,5,0,(*fun5)},//第二层
  287              {5,4,4,0,(*fun6)},//第二层
  288          
  289          
  290              {6,10,7,1,(*fun7)},//第二层
  291              {7,6,8,1,(*fun8)},//第二层
  292              {8,7,9,1,(*fun9)},//第二层
  293              {9,8,10,1,(*fun10)},//第二层
  294              {10,9,6,1,(*fun11)},//第二层
  295          
  296          
  297              {11,14,12,2,(*fun12)},//第二层
  298              {12,11,13,2,(*fun13)},//第二层
  299              {13,12,14,2,(*fun14)}, //第二层
  300              {14,13,11,2,(*fun15)}, //第二层
  301          
  302              {15,15,15,3,(*fun16)},//第二层
  303          };
  304          
  305          void Key_Driver(void)
  306          {
  307   1          //保存按键状态
  308   1          key1_last_status = key1_status;
  309   1          key2_last_status = key2_status;
  310   1          key3_last_status = key3_status;
  311   1          key4_last_status = key4_status;
  312   1          key5_last_status = key5_status;
  313   1          //读取当前按键状态
  314   1          key1_status = DOWN;
  315   1          key2_status = UP;
  316   1          key3_status = CENTER;
  317   1          key4_status = RIGHT;
  318   1          key5_status = LEFT;
  319   1          //检测到按键按下之后  并放开置位标志位
  320   1          if(key1_status && !key1_last_status)    key1_flag = 1;
  321   1          if(key2_status && !key2_last_status)    key2_flag = 1;
C251 COMPILER V5.60.0,  menu                                                               08/05/22  22:12:46  PAGE 6   

  322   1          if(key3_status && !key3_last_status)    key3_flag = 1;
  323   1          if(key4_status && !key4_last_status)    key4_flag = 1;
  324   1          if(key5_status && !key5_last_status)    key5_flag = 1;
  325   1      
  326   1          //标志位置位之后，可以使用标志位执行自己想要做的事件
  327   1          if(key1_flag)
  328   1          {
  329   2              key1_flag = 0;//使用按键之后，应该清除标志位
  330   2              ips114_clear(BLUE);//注意每次按下按键才清一次屏
  331   2              func_index = code_table[func_index].up;//功能函数的索引值为数组中的up索引值
  332   2          }
  333   1      
  334   1          if(key2_flag)
  335   1          {
  336   2              key2_flag = 0;//使用按键之后，应该清除标志位
  337   2              ips114_clear(BLUE);//注意每次按下按键才清一次屏
  338   2              func_index = code_table[func_index].down;//功能函数的索引值为数组中的down索引值
  339   2          }
  340   1      
  341   1          if(key3_flag)
  342   1          {
  343   2              key3_flag = 0;//使用按键之后，应该清除标志位
  344   2              ips114_clear(BLUE);//注意每次按下按键才清一次屏
  345   2              func_index = code_table[func_index].enter;//功能函数的索引值为数组中的enter索引值
  346   2          }
  347   1      
  348   1          if(key4_flag)
  349   1          {
  350   2              key4_flag = 0;//使用按键之后，应该清除标志位
  351   2      //        if(fun==5){;}
  352   2      //        else if(fun==6)
  353   2      //        {
  354   2      //            k -= 1;
  355   2      //        }
  356   2      //        else if(fun==7)
  357   2      //            Dir_P -= 0.1 ;
  358   2      //        else if(fun==8)
  359   2      //            Dir_D -= 1 ;
  360   2      //        else if(fun==9)
  361   2      //            L_Speed_Kp -= 0.1;
  362   2      //        else if(fun==10)
  363   2      //            L_Speed_Ki -= 0.05;
  364   2      //        else if(fun==11)
  365   2      //            L_Speed_Kd -= 0.1;
  366   2      //        else if(fun==12)
  367   2      //            GoalSpeed_L -= 100;
  368   2          }
  369   1      
  370   1          if(key5_flag)
  371   1          {
  372   2              key5_flag = 0;//使用按键之后，应该清除标志位
  373   2      //        if(fun==5){;}
  374   2      //        else if(fun==6)
  375   2      //        {
  376   2      //            j -= 1;
  377   2      //        }
  378   2      //        else if(fun==7)
  379   2      //            Dir_P += 0.1 ;
  380   2      //        else if(fun==8)
  381   2      //            Dir_D += 1 ;
  382   2      //        else if(fun==9)
  383   2      //            L_Speed_Kp += 0.1;
  384   2      //        else if(fun==10)
  385   2      //            L_Speed_Ki += 0.05;
  386   2      //        else if(fun==11)
  387   2      //            L_Speed_Kd += 0.1;
C251 COMPILER V5.60.0,  menu                                                               08/05/22  22:12:46  PAGE 7   

  388   2      //        else if(fun==12)
  389   2      //            GoalSpeed_L += 100;
  390   2          }
  391   1      
  392   1      
  393   1          current_operation_index = code_table[func_index].current_operation;
  394   1          (*current_operation_index)();//执行当前操作函数
  395   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       888     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       202     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       334     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
